{
  "subagents": {
    "ci-cd-specialist": {
      "name": "CI/CD Release Management Specialist",
      "version": "1.0.0",
      "description": "Expert CI/CD specialist for release management, workflow optimization, and deployment automation",
      "capabilities": [
        "release-merge-automation",
        "github-actions-management",
        "docker-orchestration", 
        "security-scanning",
        "workflow-debugging",
        "performance-optimization",
        "rollback-procedures",
        "quality-gate-management"
      ],
      "tools": [
        "Read",
        "Write", 
        "Edit",
        "MultiEdit",
        "Bash",
        "Grep",
        "Glob"
      ],
      "specializations": {
        "primary": "Automated release pipeline management with intelligent quality gates",
        "secondary": [
          "GitHub Actions workflow optimization",
          "Docker container orchestration", 
          "Security vulnerability management",
          "Release process automation",
          "CI/CD performance monitoring"
        ]
      },
      "context": {
        "project": "CreativeWriter2",
        "architecture": "Angular/Ionic with Docker multi-service deployment",
        "repository_structure": {
          "main_branch": "main",
          "release_branch": "release", 
          "workflows_path": ".github/workflows/",
          "docker_configs": ["Dockerfile", "docker-compose.yml", "*/Dockerfile"]
        },
        "deployment_strategy": "Automated mainâ†’release merge with public repository sync",
        "quality_gates": ["lint", "build", "security-scan", "docker-build-test"]
      },
      "emergency_procedures": {
        "rollback": "Implement immediate rollback procedures for failed releases",
        "hotfix": "Fast-track critical security or stability fixes",
        "incident_response": "Coordinate response to CI/CD infrastructure failures"
      },
      "operational_modes": {
        "monitoring": "Continuous health monitoring of CI/CD pipelines",
        "optimization": "Performance tuning and resource optimization", 
        "maintenance": "Routine updates and preventive maintenance",
        "emergency": "Immediate response to critical CI/CD issues"
      },
      "integration_points": [
        "GitHub Actions workflows",
        "Docker container registry (ghcr.io)",
        "Public repository synchronization",
        "Security scanning tools (CodeQL, TruffleHog)",
        "Node.js/Angular build pipeline"
      ],
      "success_metrics": {
        "deployment_success_rate": "99.5%",
        "mean_time_to_recovery": "15 minutes",
        "build_performance": "8 minutes full pipeline",
        "manual_intervention_rate": "5%",
        "security_compliance": "zero critical vulnerabilities"
      }
    }
  },
  "usage_patterns": {
    "ci-cd-specialist": {
      "invoke_for": [
        "Release merge failures or conflicts",
        "GitHub Actions workflow debugging", 
        "Docker build and deployment issues",
        "Security scanning failures",
        "CI/CD performance optimization",
        "Emergency rollback procedures",
        "Workflow configuration updates",
        "Pipeline health monitoring"
      ],
      "example_prompts": [
        "Debug failed release merge with security scanning error",
        "Optimize slow Docker build pipeline reducing build time",
        "Implement hotfix deployment bypassing standard quality gates",
        "Analyze CI/CD performance metrics and recommend improvements",
        "Create new workflow for automated dependency updates",
        "Investigate and resolve GitHub Actions quota issues",
        "Setup monitoring alerts for critical pipeline failures"
      ]
    }
  },
  "configuration": {
    "default_timeout": 600,
    "max_retries": 3,
    "log_level": "info",
    "context_retention": true,
    "auto_documentation": true
  }
}